version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.15

jobs:
  build_backend:
    working_directory: ~/backend
    docker:
      - image: openjdk:8
    environment:
      SBT_VERSION: 1.0.4
    steps:
      - run: echo 'export ARTIFACT_BUILD=$CIRCLE_PROJECT_REPONAME-$CIRCLE_BUILD_NUM.zip' >> $BASH_ENV
      - run:
          name: Setup SBT and docker.
          command: |
            apt update
            apt install -y curl apt-transport-https ca-certificates curl gnupg2 software-properties-common
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
            apt update
            apt-get install -y docker-ce-cli
            curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
            dpkg -i sbt-$SBT_VERSION.deb
            rm sbt-$SBT_VERSION.deb
            apt-get clean && apt-get autoclean
      - checkout
      - restore_cache:
          key: sbt-cache
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: package docker image
          command: |
            cd ragnachat_backend
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            sbt docker:publish
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"

  build_frontend:
    working_directory: ~/frontend
    docker:
      - image: circleci/node:10
    steps:
      - checkout # special step to check out source code to working directory

      - run:
          name: Install dependencies with YARN
          command: |
            cd ragnachat_frontend
            yarn install

      - run:
          name: build
          command: |
            cd ragnachat_frontend
            yarn build

      - store_artifacts:
          path: ragnachat_frontend/build

  deploy_frontend:
    working_directory: ~/frontend
    docker: # Use the Docker executor for the deploy job
      - image: circleci/python:stretch  # Specify the Docker image to use for the deploy job
    steps:
      - checkout
      - aws-s3/sync:
          from: ~/frontend/ragnachat_frontend/build
          to: $FRONTEND_BUCKET
          arguments: | # Optional arguments
            --acl public-read \
            --cache-control "max-age=86400"
          overwrite: true # default is false

workflows:
  version: 2
  build_backend:
    jobs:
      - build_backend:
          filters:
            branches:
              only:
                - master
                - staging
  build_frontend:
    jobs:
      - build_frontend:
          filters:
            branches:
              only:
                - master
                - staging
      - deploy_frontend:
          requires:
            - build_frontend
          filters:
            branches:
              only:
                - master
                - staging

